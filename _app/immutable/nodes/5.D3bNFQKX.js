import{f as sa}from"../chunks/19TPhq2Y.js";import{t as f,a as d,c as ia}from"../chunks/CjWepltc.js";import"../chunks/CTpKGYhS.js";import{al as K,av as na,aw as va,aq as q,ao as s,ar as E,c as e,am as L,an as t,o as D,j as R,ai as pa,ak as G,ap as r,as as _a,b as ua}from"../chunks/DueBzpoQ.js";import{i as Q}from"../chunks/Cj4OnVxG.js";import{p as W}from"../chunks/ah6MTnGQ.js";import{s as J}from"../chunks/lHISf35f.js";import{i as F}from"../chunks/D-tWdrT5.js";import{e as da,i as ca}from"../chunks/Bws3CwNn.js";import{r as H,s as ma}from"../chunks/Dju2emq_.js";import{a as I}from"../chunks/D7vYIUz_.js";import{b as fa}from"../chunks/CezvbbaT.js";const ga=!1,ba=async({fetch:k})=>({builds:await sa(k,"builds/all-builds.json")}),Ta=Object.freeze(Object.defineProperty({__proto__:null,load:ba,prerender:ga},Symbol.toStringTag,{value:"Module"}));var ya=f("<option>Street</option> <option>Vert</option> <option>Freestyle</option> <option>Park</option> <option>Downhill</option> <option>Cruisin</option>",1),ka=f("<option>Artistic skating</option> <option>Roller dance</option> <option>Speed skating</option> <option>Roller derby</option> <option>Park skating</option> <option>Roller hockey</option>",1),ha=f('<p class="empty svelte-upg3n6">No builds match your criteria.</p>'),Sa=f('<a class="card svelte-upg3n6"><div class="card-content svelte-upg3n6"><h3 class="card-title svelte-upg3n6"> </h3> <p class="card-type svelte-upg3n6"> </p> <small class="svelte-upg3n6"> </small></div></a>'),xa=f('<div class="build-grid svelte-upg3n6"></div>'),wa=f('<form class="container svelte-upg3n6"><div class="field-group svelte-upg3n6"><label class="svelte-upg3n6"><input type="radio" required class="svelte-upg3n6"> Skateboard</label> <label class="svelte-upg3n6"><input type="radio" class="svelte-upg3n6"> Rollerskate</label></div> <div class="field svelte-upg3n6"><label class="svelte-upg3n6">Style</label> <select required class="svelte-upg3n6"><option disabled>Select style</option><!></select></div></form> <!>',1);function ja(k,g){K(g,!1);const h=D(),b=[];let S=W(g,"builds",24,()=>[]),i=D(void 0),y=D("");const X=a=>`/builds/${a.owner_username}/${a.slug}`;na(()=>(pa(S()),e(i),e(y)),()=>{R(h,S().filter(a=>a.build_type===e(i)&&a.skating_type===e(y)))}),va(),Q();var M=wa(),O=q(M),P=s(O),B=s(P),w=s(B);H(w),w.value=w.__value="skateboard",G(),r(B);var T=t(B,2),j=s(T);H(j),j.value=j.__value="rollerskate",G(),r(T),r(P);var U=t(P,2),N=t(s(U),2);E(()=>{e(y),_a(()=>{e(i)})});var z=s(N);z.value=z.__value="";var Y=t(z);{var Z=a=>{var c=ya(),m=q(c);m.value=m.__value="street";var n=t(m,2);n.value=n.__value="vert";var p=t(n,2);p.value=p.__value="freestyle";var o=t(p,2);o.value=o.__value="park";var l=t(o,2);l.value=l.__value="downhill";var _=t(l,2);_.value=_.__value="cruisin",d(a,c)},$=(a,c)=>{{var m=n=>{var p=ka(),o=q(p);o.value=o.__value="artistic skating";var l=t(o,2);l.value=l.__value="roller dance";var _=t(l,2);_.value=_.__value="speed skating";var v=t(_,2);v.value=v.__value="roller derby";var u=t(v,2);u.value=u.__value="park skating";var x=t(u,2);x.value=x.__value="roller hockey",d(n,p)};F(a,n=>{e(i)==="rollerskate"&&n(m)},c)}};F(Y,a=>{e(i)==="skateboard"?a(Z):a($,!1)})}r(N),r(U),r(O);var aa=t(O,2);{var ea=a=>{var c=ia(),m=q(c);{var n=o=>{var l=ha();d(o,l)},p=o=>{var l=xa();da(l,5,()=>e(h),ca,(_,v)=>{var u=Sa(),x=s(u),A=s(x),ta=s(A,!0);r(A);var C=t(A,2),oa=s(C);r(C);var V=t(C,2),ra=s(V);r(V),r(x),r(u),E(la=>{ma(u,"href",la),J(ta,e(v).name),J(oa,`${e(v).build_type??""} â€” ${e(v).skating_type??""}`),J(ra,`by ${e(v).owner_username??""}`)},[()=>X(e(v))],ua),d(_,u)}),r(l),d(o,l)};F(m,o=>{e(h).length===0?o(n):o(p,!1)})}d(a,c)};F(aa,a=>{e(i)&&e(y)&&a(ea)})}I(b,[],w,()=>e(i),a=>R(i,a)),I(b,[],j,()=>e(i),a=>R(i,a)),fa(N,()=>e(y),a=>R(y,a)),d(k,M),L()}var qa=f('<main><h1>Find a build</h1> <div class="container"><!></div></main>');function Ua(k,g){K(g,!1);let h=W(g,"data",8);Q();var b=qa(),S=t(s(b),2),i=s(S);ja(i,{get builds(){return h().builds}}),r(S),r(b),d(k,b),L()}export{Ua as component,Ta as universal};
