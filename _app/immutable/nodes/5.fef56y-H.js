import{f as ia}from"../chunks/19TPhq2Y.js";import{t as f,a as d,c as sa}from"../chunks/Cbs2TP5J.js";import"../chunks/DppSS1ZK.js";import{ak as K,av as na,aw as va,aq as q,an as i,ar as E,c as e,al as L,am as t,o as D,j as R,ai as pa,ap as G,ao as l,as as _a,b as ua}from"../chunks/BQECxIka.js";import{i as Q}from"../chunks/-1FsuQLY.js";import{p as W}from"../chunks/Ct2zQ0GF.js";import{s as J}from"../chunks/D7dhJHJ5.js";import{i as F}from"../chunks/BxIlQOsl.js";import{e as da,i as ca}from"../chunks/_x8JZXJS.js";import{r as H,s as ma}from"../chunks/C1JmazWi.js";import{a as I}from"../chunks/BHVgj7FX.js";import{b as fa}from"../chunks/CoqOecze.js";const ga=async({fetch:k})=>({builds:await ia(k,"builds/all-builds.json")}),Ma=Object.freeze(Object.defineProperty({__proto__:null,load:ga},Symbol.toStringTag,{value:"Module"}));var ba=f("<option>Street</option> <option>Vert</option> <option>Freestyle</option> <option>Park</option> <option>Downhill</option> <option>Cruisin</option>",1),ya=f("<option>Artistic skating</option> <option>Roller dance</option> <option>Speed skating</option> <option>Roller derby</option> <option>Park skating</option> <option>Roller hockey</option>",1),ka=f('<p class="empty svelte-upg3n6">No builds match your criteria.</p>'),ha=f('<a class="card svelte-upg3n6"><div class="card-content svelte-upg3n6"><h3 class="card-title svelte-upg3n6"> </h3> <p class="card-type svelte-upg3n6"> </p> <small class="svelte-upg3n6"> </small></div></a>'),Sa=f('<div class="build-grid svelte-upg3n6"></div>'),xa=f('<form class="container svelte-upg3n6"><div class="field-group svelte-upg3n6"><label class="svelte-upg3n6"><input type="radio" required class="svelte-upg3n6"> Skateboard</label> <label class="svelte-upg3n6"><input type="radio" class="svelte-upg3n6"> Rollerskate</label></div> <div class="field svelte-upg3n6"><label class="svelte-upg3n6">Style</label> <select required class="svelte-upg3n6"><option disabled>Select style</option><!></select></div></form> <!>',1);function wa(k,g){K(g,!1);const h=D(),b=[];let S=W(g,"builds",24,()=>[]),s=D(void 0),y=D("");const X=a=>`/builds/${a.owner_username}/${a.slug}`;na(()=>(pa(S()),e(s),e(y)),()=>{R(h,S().filter(a=>a.build_type===e(s)&&a.skating_type===e(y)))}),va(),Q();var M=xa(),O=q(M),P=i(O),B=i(P),w=i(B);H(w),w.value=w.__value="skateboard",G(),l(B);var T=t(B,2),j=i(T);H(j),j.value=j.__value="rollerskate",G(),l(T),l(P);var U=t(P,2),N=t(i(U),2);E(()=>{e(y),_a(()=>{e(s)})});var z=i(N);z.value=z.__value="";var Y=t(z);{var Z=a=>{var c=ba(),m=q(c);m.value=m.__value="street";var n=t(m,2);n.value=n.__value="vert";var p=t(n,2);p.value=p.__value="freestyle";var o=t(p,2);o.value=o.__value="park";var r=t(o,2);r.value=r.__value="downhill";var _=t(r,2);_.value=_.__value="cruisin",d(a,c)},$=(a,c)=>{{var m=n=>{var p=ya(),o=q(p);o.value=o.__value="artistic skating";var r=t(o,2);r.value=r.__value="roller dance";var _=t(r,2);_.value=_.__value="speed skating";var v=t(_,2);v.value=v.__value="roller derby";var u=t(v,2);u.value=u.__value="park skating";var x=t(u,2);x.value=x.__value="roller hockey",d(n,p)};F(a,n=>{e(s)==="rollerskate"&&n(m)},c)}};F(Y,a=>{e(s)==="skateboard"?a(Z):a($,!1)})}l(N),l(U),l(O);var aa=t(O,2);{var ea=a=>{var c=sa(),m=q(c);{var n=o=>{var r=ka();d(o,r)},p=o=>{var r=Sa();da(r,5,()=>e(h),ca,(_,v)=>{var u=ha(),x=i(u),A=i(x),ta=i(A,!0);l(A);var C=t(A,2),oa=i(C);l(C);var V=t(C,2),la=i(V);l(V),l(x),l(u),E(ra=>{ma(u,"href",ra),J(ta,e(v).name),J(oa,`${e(v).build_type??""} â€” ${e(v).skating_type??""}`),J(la,`by ${e(v).owner_username??""}`)},[()=>X(e(v))],ua),d(_,u)}),l(r),d(o,r)};F(m,o=>{e(h).length===0?o(n):o(p,!1)})}d(a,c)};F(aa,a=>{e(s)&&e(y)&&a(ea)})}I(b,[],w,()=>e(s),a=>R(s,a)),I(b,[],j,()=>e(s),a=>R(s,a)),fa(N,()=>e(y),a=>R(y,a)),d(k,M),L()}var ja=f('<main><h1>Find a build</h1> <div class="container"><!></div></main>');function Ta(k,g){K(g,!1);let h=W(g,"data",8);Q();var b=ja(),S=t(i(b),2),s=i(S);wa(s,{get builds(){return h().builds}}),l(S),l(b),d(k,b),L()}export{Ta as component,Ma as universal};
